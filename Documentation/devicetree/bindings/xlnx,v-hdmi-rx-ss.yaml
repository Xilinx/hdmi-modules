# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/media/xilinx/xlnx,v-hdmi-rx-ss.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Xilinx HDMI 1.4/2.0 Receiver Subsystem

maintainers:
  - Rajesh Gugulothu <rajesh.gugulothu@amd.com>

description: |
  The Xilinx HDMI RX Subsystem contains several subcores to implement
  a HDMI receiver. /hdmi/xilinx-hdmi-rx.c implements a V4L2 video-capture
  sub-device for the Xilinx Video IP Pipeline device (xilinx-vipp). There are
  2 optional HDCP cores that can be included in the IP configuration. Below
  provided sample device tree depicts the configuration when both cores are
  included. If an optional core is included then corresponding entries for the
  core parameters (interrupts, key-management block address) must be included
  inthe device tree.
  Note: If HDCP cores are included in the design, the user must provide valid
  HDCP keys for the encryption to work.

properties:
  compatible:
    items:
      - enum:
          - xlnx,v-hdmi-rx-ss-3.1

  interrupt-names:
    items:
      - const: irq
      - const: hdcp14_irq
      - const: hdcp14_timer_irq
      - const: hdcp22_irq
      - const: hdcp22_timer_irq

  reg:
    minItems: 2

  reg-names:
    items:
      - const: hdmi-rxss
      - const: hdcp1x-keymngmt

  interrupts:
    minItems: 1
    maxItems: 5

  clocks:
    description: Phandle of all the clocks required by IP are listed here
    items:
      - description: Clock for AXI4-Lite control interface
      - description: Fixed link clock
      - description: Audio clock
      - description: video clock
      - description: AXI4 Video clock

  clock-names:
    description: Names of all the clocks required by IP are listed here
    items:
      - const: s_axi_cpu_aclk
      - const: link_clk
      - const: s_axis_audio_aclk
      - const: video_clk
      - const: s_axis_video_aclk

  xlnx,audio-enabled:
    type: boolean
    $ref: /schemas/types.yaml#/definitions/flag
    description: |
      Boolean parameter to convey that design has audioi functionality. If
      present, indicates optional audio core needed for audio usecase is
      included.
  xlnx,include-hdcp-1-4:
    type: boolean
    $ref: /schemas/types.yaml#/definitions/flag
    description: |
      Boolean parameter that denotes if hdcp14 is included. If present
      indicates inclusion of the optional core.

  xlnx,include-hdcp-2-2:
    type: boolean
    $ref: /schemas/types.yaml#/definitions/flag
    description: |
      Boolean parameter that denotes if hdcp22 is included. If present
      indicates inclusion of the optional core.

  xlnx,edid-ram-size:
    description: |
      Denotes amount of BRAM allocated for EDID in IP
      The possible values are 256, 512, 1024 or 4096.
    $ref: /schemas/types.yaml#/definitions/uint32
    enum: [ 256, 512, 1024, 4096 ]

  xlnx,input-pixels-per-clock:
    description: |
      Number of pixels per clock on Video Interface.
    $ref: /schemas/types.yaml#/definitions/uint32
    enum: [ 2, 4 ]

  xlnx,max-bits-per-component:
    description: |
      Maximum bits per component.
    $ref: /schemas/types.yaml#/definitions/uint32
    enum: [ 8, 10, 12, 16 ]

  xlnx,snd-pcm:
    description: |
      Reference to audio formatter block. Add this if, audio formatter
      is going to be used for HDMI audio. Needed only if "xlnx,audio-enabled"
      is included.
    $ref: /schemas/types.yaml#/definitions/phandle

  phys:
    description: |
      This denotes phandles for phy lanes registered for HDMI protocol.
      HDMI 1.4/2.0 always require 3 lanes

  phy-names:
    items:
      - const: hdmi-phy0
      - const: hdmi-phy1
      - const: hdmi-phy2

  ports:
    type: object

    properties:
      port@0:
        type: object
        description: |
          Output / source port node, endpoint describing modules
          connected the HDMI receiver

        properties:
          reg:
            const: 0

          endpoint:
            type: object

            properties:

              remote-endpoint: true

            required:
              - remote-endpoint

            additionalProperties: false

        additionalProperties: false

required:
  - compatible
  - reg
  - interrupts
  - clocks
  - clock-names
  - xlnx,audio-enabled
  - xlnx,include-hdcp-1-4
  - xlnx,include-hdcp-2-2
  - xlnx,edid-ram-size
  - xlnx,max-bits-per-component
  - xlnx,input-pixels-per-clock
  - phys
  - phy-names
  - ports

additionalProperties: false

examples:
  - |
    hdcp_keymngmt_blk_1: hdcp_keymngmt_blk_top@88000000 {
      clock-names = "s_axi_aclk", "m_axis_aclk";
      clocks = <&zynqmp_clk 71>, <&misc_clk_0>;
      compatible = "xlnx,hdcp-keymngmt-blk-top-1.0";
      reg = <0x0 0x88000000 0x0 0x10000>;
    };

    v_hdmi_rx_ss: v_hdmi_rx_ss@80000000 {
      compatible = "xlnx,v-hdmi-rx-ss-3.1";
      reg = <0x80000000 0x10000>, <0xa0270000 0x10000>;
      reg-names = "hdmi-rxss", "hdcp1x-keymngmt";
      interrupt-parent = <&gic>;
      interrupts = <0 90 4>, <0 104 4>, <0 105 4>, <0 108 4>, <0 109 4>;
      interrupt-names = "irq", "hdcp14_irq", "hdcp14_timer_irq", "hdcp22_irq", "hdcp22_timer_irq";
      clock-names = "s_axi_cpu_aclk" , "link_clk" , "s_axis_audio_aclk" , "video_clk" , "s_axis_video_aclk";
      clocks = <&zynqmp_clk 71>, <&misc_clk_1>, <&zynqmp_clk 71>, <&misc_clk_2>, <&zynqmp_clk 72>;
      phy-names = "hdmi-phy0", "hdmi-phy1", "hdmi-phy2";
      phys = <&rxphy_lane0 0 1 1 0>,<&rxphy_lane1 0 1 1 0>, <&rxphy_lane2 0 1 1 0>;
      xlnx,input-pixels-per-clock = <0x2>;
      xlnx,max-bits-per-component = <0xa>;
      xlnx,edid-ram-size = <0x100>;
      xlnx,include-hdcp-1-4;
      xlnx,include-hdcp-2-2;
      xlnx,audio-enabled;
      xlnx,snd-pcm = <&audio_ss_0_audio_formatter_0>;
      ports {
        #address-cells = <1>;
        #size-cells = <0>;
        port@0 {
           reg = <0>;
           hdmi_rx_in: endpoint {
             remote-endpoint = <&vcap_hdmi_in>;
           };
        };
      };
    };
# If hdcp1.4 is included in the design then key management block node should
# be added to the device tree

# Documentation of "audio_ss_0_audio_formatter_0" node is located at
# Documentation/devicetree/bindings/sound/xlnx,audio-formatter.txt
...
